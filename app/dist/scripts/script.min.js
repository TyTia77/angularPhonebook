"use strict";var app=angular.module("myApp",["ngRoute"]);app.config(["$routeProvider","$locationProvider",function(t,e){t.when("/",{templateUrl:"app/view/address-book.html",controller:"addressCtrl"}).otherwise({redirectTo:"/"})}]),app.directive("customDialog",[function(){return{restrict:"E",scope:{title:"=",class:"="},transclude:{body:"?dialogBody",footer:"?dialogFooter"},templateUrl:"app/view/custom-directives/custom-dialog.html",controller:"@",name:"controller"}}]),app.service("myService",["$rootScope",function(t){var e="first_name",o=["#db4540","#384c7a","#6cde9b","#b07142","#b771e0","#e6d698"];this.getColours=function(t){return o[t]},this.getSortByValue=function(){return e},this.setSortByValue=function(o){e=o,t.$emit("sortByChange",o)},this.setContactList=function(t){this.contactList=t},this.getContactList=function(t){if(!t)return this.contactList;for(var e in this.contactList)if(this.contactList[e].id==t)return this.contactList[e]}}]),app.service("dialogContactService",["$rootScope",function(t){this.state=!1,this.getState=function(){return this.state}}]),app.factory("myFactory",["$http",function(t){var e="http://60.242.62.79:5000/contacts",o={};return o.getContacts=function(){return t.get(e)},o.insertContact=function(o){return t.post(e,o)},o.updateContact=function(o,n){return t.put(e+"/"+o,n)},o.deleteContact=function(o){return t.delete(e+"/"+o)},o}]),app.factory("buttonFactory",function(){function t(t){this.active=t||!1}return t.prototype.getActive=function(){return this.active},t.prototype.validate=function(t,e){"function"==typeof t&&(this.active=t(e))},t.prototype.handleClick=function(t,e){"function"==typeof t&&t(e)},{new:t}}),app.controller("addressCtrl",["$rootScope","$scope","$location","myFactory","myService","buttonFactory",function(t,e,o,n,c,a){function i(){n.getContacts().then(function(t){var o=t.data.contactList,n=0;o.forEach(function(t){var e=t.first_name[0].toUpperCase(),a=t.last_name[0].toUpperCase(),i=Math.floor(6*Math.random());o[n].initials=e+a,o[n].colour=c.getColours(i),n++}),c.setContactList(o),e.contactList=c.getContactList(),setTimeout(function(){l()},1)},function(t){console.log(t)})}i(),e.sortByValue=c.sortByValue,e.toggleSettingDialog=function(){t.$emit("toggleDialogSetting",{})},e.toggleAddNewDialog=function(){t.$emit("toggleDialogAddNew",{})},e.toggleContactDialog=function(e){t.$emit("toggleDialogContact",e)},t.$on("sortByChange",function(t,o){e.sortByValue=o}),t.$on("refreshContactList",function(){i()});var l=function(){try{var t=$(".listview-header")||!1,e=t[0].clientWidth,o=$(".listview")[0].clientWidth;if(e>o){var n=-Math.abs(e-o);t.css("left",n+"px")}else t.css("left","0px")}catch(t){console.log(t)}}}]),app.controller("dialogAddNewCtrl",["$scope","$rootScope","myFactory","myService","buttonFactory",function(t,e,o,n,c){function a(n){o.insertContact(n).then(function(o){console.log("succesfully inserted"),t.handleNewContactClearAllClick(),e.$emit("refreshContactList",{})},function(t){console.log(t)})}t.openState=!1,t.newContact={},t.newContactClearAll=new c.new,t.newContactSubmit=new c.new,e.$on("toggleDialogAddNew",function(){t.toggle()}),t.toggle=function(){t.openState=!t.openState},t.handleNewContactClearAllValidate=function(t){for(var e in t)if(t[e].length>0)return!0;return!1},t.handleNewContactClearAllClick=function(){for(var e in t.newContact)t.newContact[e]="";t.newContactClearAll.active=!1},t.handleNewContactSubmitValidate=function(t){return!(!t.first_name||!t.last_name)},t.handleNewContactSubmitClick=function(){a(t.newContact),t.newContactSubmit.active=!1}}]),app.controller("dialogContactCtrl",["$scope","$rootScope","myFactory","myService","buttonFactory","dialogContactService",function(t,e,o,n,c,a){function i(e){var o={};for(var n in e)switch(n){case"$$hashKey":case"colour":case"initials":break;default:o[n]=e[n]}r(o),t.contactDetailEditMode=!t.contactDetailEditMode}function l(n){o.deleteContact(n).then(function(o){console.log("successfully deleted"),t.contactDetailEditMode=!t.contactDetailEditMode,t.toggle(),e.$emit("refreshContactList",{})},function(t){console.log(t)})}function r(t){o.updateContact(t.id,t).then(function(t){console.log("succesfully inserted")},function(t){console.log(t)})}t.openState=!1,t.contactDetailEditMode=!1,t.contactDetailEdit=new c.new(!0),t.contactDetailCancel=new c.new(!0),t.contactDetailDelete=new c.new(!0),t.contactDetailSave=new c.new(!0),t.handleContactDetailEditClick=function(){t.contactDetailEditMode=!t.contactDetailEditMode},t.handleContactDetailCancelClick=function(){t.contactDetailEditMode=!t.contactDetailEditMode},t.handleContactDetailDeleteClick=function(t){l(t)},t.handleContactDetailSaveClick=function(t){i(t)},e.$on("toggleDialogContact",function(e,o){t.contactDetail=n.getContactList(o),t.toggle()}),t.toggle=function(){t.openState=!t.openState},t.$watch("openState",function(t,e){console.log("new "+t),console.log("old "+e)})}]),app.controller("dialogSettingCtrl",["$scope","$rootScope","myFactory","myService","buttonFactory",function(t,e,o,n,c){t.openState=!1,t.settingApply=new c.new,t.sortByValue=n.getSortByValue();var a="first_name";t.toggle=function(){t.openState=!t.openState,t.openState?$(".container").attr("faded",!0):$(".container").removeAttr("faded")},t.handleSettingValidate=function(t){return t!=a},t.handleSettingSubmit=function(){n.setSortByValue($("#sortby").val()),t.sortByValue=$("#sortby").val(),t.settingApply.active=!1,a=$("#sortby").val()},e.$on("toggleDialogSetting",function(){t.toggle()})}]);