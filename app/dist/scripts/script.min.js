"use strict";var app=angular.module("myApp",["ngRoute"]);app.config(["$routeProvider","$locationProvider",function(t,e){t.when("/",{templateUrl:"app/view/address-book.html",controller:"addressCtrl"}).otherwise({redirectTo:"/"})}]),app.directive("customDialog",[function(){return{restrict:"E",scope:{headerTitle:"=",class:"="},transclude:{body:"?dialogBody",footer:"?dialogFooter"},templateUrl:"app/view/custom-directives/custom-dialog.html",controller:"@",name:"controller"}}]),app.service("validateService",["$rootScope",function(t){this.email=function(t){return/\S+@\S+\.\S+/.test(t)},this.text=function(t){return/^[a-zA-Z\s]+$/.test(t)},this.num=function(t){return/^[0-9]+$/.test(t)}}]),app.service("myService",["$rootScope",function(t){var e=["#db4540","#384c7a","#6cde9b","#b07142","#b771e0","#e6d698"];this.getColours=function(t){return e[t]};var n="first_name";this.getSortByValue=function(){return n},this.setSortByValue=function(e){n=e,t.$emit("sortByChange",e)};this.setContactList=function(t){this.contactList=t},this.getContactList=function(t){if(!t)return this.contactList;for(var e in this.contactList)if(this.contactList[e].id==t)return this.contactList[e]},this.updateContactInstanceState=function(){t.$emit("toggleDialogContact",{})},this.checkOpenState=function(t){t?$(".container").attr("faded",!0):$(".container").removeAttr("faded")}}]),app.factory("myFactory",["$http",function(t){var e="http://60.242.62.79:5000/contacts",n={};return n.getContacts=function(){return t.get(e)},n.insertContact=function(n){return t.post(e,n)},n.updateContact=function(n,o){return t.put(e+"/"+n,o)},n.deleteContact=function(n){return t.delete(e+"/"+n)},n}]),app.factory("buttonFactory",function(){function t(t){this.active=t||!1}return t.prototype.getActive=function(){return this.active},t.prototype.validate=function(t,e){"function"==typeof t&&(this.active=t(e))},t.prototype.handleClick=function(t,e){"function"==typeof t&&t(e)},{new:t}}),app.controller("addressCtrl",["$rootScope","$scope","$location","myFactory","myService","buttonFactory",function(t,e,n,o,a,c){function i(){o.getContacts().then(function(t){var n=t.data.contactList,o=0;n.forEach(function(t){var e=t.first_name[0].toUpperCase(),c=t.last_name[0].toUpperCase(),i=Math.floor(6*Math.random());n[o].initials=e+c,n[o].colour=a.getColours(i),o++}),a.setContactList(n),e.contactList=a.getContactList(),setTimeout(function(){l()},1)},function(t){console.log(t)})}i(),e.sortByValue=a.getSortByValue(),e.toggleSettingDialog=function(){t.$emit("toggleDialogSetting",{})},e.toggleAddNewDialog=function(){t.$emit("toggleDialogAddNew",{})},e.toggleContactDialog=function(e){t.$emit("toggleDialogContact",e)},t.$on("sortByChange",function(t,n){e.sortByValue=n}),t.$on("refreshContactList",function(){i()});var l=function(){try{var t=$(".listview-header")||!1,e=t[0].clientWidth,n=$(".listview")[0].clientWidth;if(e>n){var o=-Math.abs(e-n);t.css("left",o+"px")}else t.css("left","0px")}catch(t){console.log(t)}}}]),app.controller("dialogAddNewCtrl",["$scope","$rootScope","myFactory","myService","buttonFactory","validateService",function(t,e,n,o,a,c){function i(o){n.insertContact(o).then(function(n){console.log("succesfully inserted"),t.handleNewContactClearAllClick(),e.$emit("refreshContactList",{})},function(t){console.log(t)})}t.openState=!1,t.newContact={},t.newContactClearAll=new a.new,t.newContactSubmit=new a.new,e.$on("toggleDialogAddNew",function(){t.toggle()}),t.toggle=function(){t.openState=!t.openState,o.checkOpenState(t.openState)},t.handleNewContactClearAllValidate=function(t){for(var e in t)if(t[e].length>0)return!0;return!1},t.handleBlur=function(t,e,n){console.log(t);var o=c[n](e);console.log(o),o?t.target.classList.remove("notvalid"):t.target.classList.add("notvalid")},t.handleNewContactClearAllClick=function(){for(var e in t.newContact)t.newContact[e]="";t.newContactClearAll.active=!1,t.newContactSubmit.active=!1},t.handleNewContactSubmitValidate=function(t){return!(!t.first_name||!t.last_name)},t.handleNewContactSubmitClick=function(){i(t.newContact),t.newContactSubmit.active=!1}}]),app.controller("dialogContactCtrl",["$scope","$rootScope","myFactory","myService","buttonFactory",function(t,e,n,o,a){function c(e){var n={};for(var o in e)switch(o){case"$$hashKey":case"colour":case"initials":break;default:n[o]=e[o]}l(n),t.contactDetailEditMode=!t.contactDetailEditMode}function i(a){n.deleteContact(a).then(function(n){console.log("successfully deleted"),t.contactDetailEditMode=!t.contactDetailEditMode,o.updateContactInstanceState(),e.$emit("refreshContactList",{})},function(t){console.log(t)})}function l(t){n.updateContact(t.id,t).then(function(t){console.log("succesfully inserted")},function(t){console.log(t)})}t.openState=!1,t.contactDetailEditMode=!1,t.contactDetailEdit=new a.new(!0),t.contactDetailCancel=new a.new(!0),t.contactDetailDelete=new a.new(!0),t.contactDetailSave=new a.new(!0),t.handleContactDetailEditClick=function(){t.contactDetailEditMode=!t.contactDetailEditMode},t.handleContactDetailCancelClick=function(){t.contactDetailEditMode=!t.contactDetailEditMode},t.handleContactDetailDeleteClick=function(t){i(t)},t.handleContactDetailSaveClick=function(t){c(t)},e.$on("toggleDialogContact",function(e,n){n&&(t.contactDetail=o.getContactList(n)),t.toggle()}),t.toggle=function(){t.openState=!t.openState,o.checkOpenState(t.openState),t.contactDetailEditMode&&(t.contactDetailEditMode=!t.contactDetailEditMode)}}]),app.controller("dialogSettingCtrl",["$scope","$rootScope","myFactory","myService","buttonFactory",function(t,e,n,o,a){t.openState=!1,t.settingApply=new a.new,t.sortByValue=o.getSortByValue();var c="first_name";t.toggle=function(){t.openState=!t.openState,o.checkOpenState(t.openState)},t.handleSettingValidate=function(t){return t!=c},t.handleSettingSubmit=function(){o.setSortByValue($("#sortby").val()),t.sortByValue=$("#sortby").val(),t.settingApply.active=!1,c=$("#sortby").val()},e.$on("toggleDialogSetting",function(){t.toggle()})}]);